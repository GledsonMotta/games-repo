<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.vira_atual = false;

audio_play_music(snd_bkg_jazz,true);

global.actual_number = "00";

global.num_of_cards = 2;

global.exibiu = 0;

global.insert_cards = false;

global.find = false;

global.probabilidade = 3;

global.soma = 100;

global.tries = 10;

global.score = 0;

global.nivel = 1;

global.restart = false;

global.last_score = 0;

global.reset = false;

ini_open("game.ini");
global.balls[0] = ini_read_string("balls", "ball1", "0");
global.balls[1] = ini_read_string("balls", "ball2", "0");
global.balls[2] = ini_read_string("balls", "ball3", "0");
global.balls[3] = ini_read_string("balls", "ball4", "0");
global.balls[4] = ini_read_string("balls", "ball5", "0");
global.balls[5] = ini_read_string("balls", "ball6", "0");

global.scores[0] = ini_read_real("scores", "score1", 0);
global.scores[1] = ini_read_real("scores", "score2", 0);
global.scores[2] = ini_read_real("scores", "score3", 0);
global.scores[3] = ini_read_real("scores", "score4", 0);
global.scores[4] = ini_read_real("scores", "score5", 0);
global.scores[5] = ini_read_real("scores", "score6", 0);
ini_close(); 


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Anuncio

/*ads_enable(0, 0, 0); */



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tratamento das Cartas

if(global.vira_atual == true)
{

    global.vira_atual = false;
    
    count = 0;
    
    for(i=0; i&lt;array_length_1d(global.array_of_cards); i++)
    {
        global.array_of_cards[i].virado = true;
        
        if(global.find = false)
        {
            if( global.array_of_cards[i].number == global.actual_number)
            {
                global.array_of_cards[i].sprite = spr_card_back_yes;                             
            }
            else
            {
                global.array_of_cards[i].sprite = spr_card_back_no;  
            }
        }
    }
    
    global.find = false;
    
    global.insert_cards = true;
}

if(global.insert_cards==true)
{
    global.insert_cards = false;

    card_x=768;

    if(global.num_of_cards==2)
    {
     card_y=128;    
     soma_card = 160;
    }
    
    if(global.num_of_cards==3)
    {
     card_y=96;    
     soma_card = 96;
    }
    
    if(global.num_of_cards==4)
    {
     card_y=64;    
     soma_card = 96;
    }
    
    
    
    /*Insere os números aleatórios no array, de acordo a quantidade de cartas*/
    for(i=0; i&lt;global.num_of_cards; i++)
    {
        global.array_of_cards[i] = instance_create(card_x, card_y, obj_card);
    
        global.array_of_cards[i].number = string(irandom_range(0,99));
        
        if(string_length(global.array_of_cards[i].number)==1)
        {
             global.array_of_cards[i].number = "0"+ global.array_of_cards[i].number;
        }
        
        card_y+=soma_card;
    }
    
    
    /*Insere os números corretos de acordo com a probabilidade*/
    for(i=0; i&lt;global.probabilidade; i++)
    {
        index = 0;
        
        index = irandom_range(0,global.num_of_cards-1);
    
        global.array_of_cards[index].number = global.actual_number;
    }    
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tratamento das Tentativas

if(global.tries &lt;0)
{
    room_fase.persistent = false;

    global.tries = 10;
    
    room_goto(game_over);  
    
    /*Verifica se o número é maior do que os anteriores*/

var posicao = -1;
var copia = false;


if(global.score &gt; global.scores[0])
{
    posicao = 0;
    if(global.actual_number == global.balls[0])
    {
        copia = true;   
    }
}
else if(global.score &gt; global.scores[1])
{
    posicao = 1;
    if(global.actual_number == global.balls[1])
    {
        copia = true;   
    }
}
else if(global.score &gt; global.scores[2])
{
    posicao = 2;
    if(global.actual_number == global.balls[2])
    {
        copia = true;   
    }
}
else if(global.score &gt; global.scores[3])
{
    posicao = 3;
    if(global.actual_number == global.balls[3])
    {
        copia = true;   
    }
}
else if(global.score &gt; global.scores[4])
{
    posicao = 4;
    if(global.actual_number == global.balls[4])
    {
        copia = true;   
    }
}
else if(global.score &gt; global.scores[5])
{
    posicao = 5;
    if(global.actual_number == global.balls[5])
    {
        copia = true;   
    }
}


if(posicao &gt;= 0)
{
    if(copia==true)
    {
        global.balls[posicao] = global.actual_number;
        
        global.scores[posicao] = global.score;
    }
    else
    {
        for (i = 5; i &gt; posicao; i -= 1)
    {
        global.balls[i] = global.balls[i-1];
        global.scores[i] = global.scores[i-1];
    }
    
        global.balls[posicao] = global.actual_number;
        
        global.scores[posicao] = global.score;
    }
}    
    


/*Salva informações no arquivo*/

ini_open("game.ini");
ini_write_string("balls", "ball1", global.balls[0]);
ini_write_string("balls", "ball2", global.balls[1]);
ini_write_string("balls", "ball3", global.balls[2]);
ini_write_string("balls", "ball4", global.balls[3]);
ini_write_string("balls", "ball5", global.balls[4]);
ini_write_string("balls", "ball6", global.balls[5]);

ini_write_real("scores", "score1", global.scores[0]);
ini_write_real("scores", "score2", global.scores[1]);
ini_write_real("scores", "score3", global.scores[2]);
ini_write_real("scores", "score4", global.scores[3]);
ini_write_real("scores", "score5", global.scores[4]);
ini_write_real("scores", "score6", global.scores[5]);
ini_close(); 

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tratamento do Score
if(global.score &gt;= 500 and global.nivel ==1)
{
    global.probabilidade = 1;
    
    global.tries = global.tries + 3;
    
    global.nivel = 2;
    
    audio_play_sound(snd_next,0,false);
}

if(global.score &gt;= 1000 and global.nivel ==2)
{
    global.probabilidade = 2;
   
    global.tries = global.tries + 3;
    
    global.nivel = 3;
    
    global.num_of_cards = 3;
    
    audio_play_sound(snd_next,0,false);
}

if(global.score &gt;= 2000 and global.nivel ==3)
{
    global.probabilidade = 1;
    
    global.tries = global.tries + 5;
    
    global.nivel = 4;
    
    audio_play_sound(snd_next,0,false);
}

if(global.score &gt;= 3000 and global.nivel ==4)
{
    global.num_of_cards = 4;

    global.probabilidade = 3;
    
    global.tries = global.tries + 10;
    
    global.nivel = 5;
    
    audio_play_sound(snd_next,0,false);
}

if(global.score &gt;= 4000 and global.nivel ==5)
{
   
    global.probabilidade = 2;
    
    global.tries = global.tries + 4;
    
    global.nivel = 6;
    
    audio_play_sound(snd_next,0,false);
}

if(global.score &gt;= 5000 and global.nivel ==6)
{
   
    global.probabilidade = 1;
    
    global.tries = global.tries + 4;
    
    global.nivel = 7;
    
    global.last_score = global.score;
    
    audio_play_sound(snd_next,0,false);
}

if(global.nivel ==7 and global.score &gt; global.last_score +(global.soma*10))
{

    global.last_score = global.score;

    global.probabilidade = global.probabilidade-1;
    
    global.tries = global.tries + 4;

    audio_play_sound(snd_next,0,false);
}

if(global.score &gt;= 10000 and global.soma = 100)
{
    global.soma = 1000;

    global.tries = global.tries + 5;

    audio_play_sound(snd_next,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(room = room_start)
{
draw_set_color(c_blue);

draw_set_font(fnt_number_fase);

draw_text(30,room_height-50,"Best Numbers: "+global.balls[0]+'-'
+global.balls[1]+'-'+global.balls[2]+'-'
+global.balls[3]+'-'+global.balls[4]+'-'
+global.balls[5]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == room_fase)
{
    room_persistent = false;

    room_goto_previous();
     
    room_set_persistent( room_fase, false );
}
else if(room != room_start)
{
    room_goto_previous();
}
else if(room == room_start)
{
/*if(global.exibiu == 0){
if ads_interstitial_available()
   {
   ads_interstitial_display();
   }
   global.exibiu = 1;
   }
   
   else{*/
     audio_play_sound(snd_back,0,false);
   
   game_end();
   //}*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
